/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nar.ui.transaksi;

import com.nar.Main;
import com.nar.model.Customer;
import com.nar.util.ComponentUtils;
import java.util.List;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author gunanto
 */
public class CariCustomer extends javax.swing.JDialog {
    private Customer customer;
    private List<Customer> customers;
    /**
     * Creates new form CariCustomer2
     */
    public CariCustomer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tableCustomer.setAutoCreateColumnsFromModel(false);
        refreshTable();
    }
    
    public Customer getCustomer() {
        return customer;
    }
    
    private void selectionListenerPerformed()
    {
        customer = customers.get(tableCustomer.getSelectedRow());
        customer = Main.getCustomerService().getCustomer(customer.getNip());
        setVisible(false);
    }
    
    private void refreshTable()
    {
        customers = Main.getCustomerService().getCustomers();
        tableCustomer.setModel(new CariCustomer.CustomerTableModel(customers));
    }
    
     private class CustomerTableModel extends AbstractTableModel
     {
        private List<Customer> customers;
        
        public CustomerTableModel(List<Customer> customers)
        {
            this.customers = customers;
        }
        
        public int getRowCount()
        {
            return customers.size();
        }
        
        public int getColumnCount()
        {
            return 4;
        }
        
        public Object getValueAt(int rowIndex, int columnIndex)
        {
            Customer c = customers.get(rowIndex);
            
            switch(columnIndex)
            {
                case 0:
                    return c.getNip();
                case 1:
                    return c.getNama();
                case 2:
                    return c.getAlamat();
                case 3:
                    return c.getNoTelp();
                default:
                    return "";
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableCustomer = new javax.swing.JTable();
        txtCariCustomer = new javax.swing.JTextField();
        lblCariCustomer = new javax.swing.JLabel();

        tableCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIP", "Nama", "Alamat", "No Telp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCustomer);

        txtCariCustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariCustomerKeyReleased(evt);
            }
        });

        lblCariCustomer.setText("Cari Customer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCariCustomer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCariCustomer)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCariCustomer)
                    .addComponent(txtCariCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCustomerMouseClicked
        // TODO add your handling code here:
        if(tableCustomer.getSelectedRow()>=0)
        {
            selectionListenerPerformed();
        }

    }//GEN-LAST:event_tableCustomerMouseClicked

    private void txtCariCustomerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariCustomerKeyReleased
        // TODO add your handling code here:
        int column = 0;
        for(int i = 0; i < tableCustomer.getRowCount(); i++)
        {
            String val = tableCustomer.getValueAt(i, column).toString();
            if(val!=null && val.startsWith(txtCariCustomer.getText()))
            {
                tableCustomer.getSelectionModel().setSelectionInterval(i, i);
                ComponentUtils.scrollToRect(tableCustomer, i);
                break;
            }
        }
    }//GEN-LAST:event_txtCariCustomerKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CariCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CariCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CariCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CariCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CariCustomer dialog = new CariCustomer(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCariCustomer;
    private javax.swing.JTable tableCustomer;
    private javax.swing.JTextField txtCariCustomer;
    // End of variables declaration//GEN-END:variables
}
